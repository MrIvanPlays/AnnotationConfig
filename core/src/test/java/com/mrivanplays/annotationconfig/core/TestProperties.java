package com.mrivanplays.annotationconfig.core;

import com.mrivanplays.annotationconfig.core.PropertiesTestSubject.MessageType;
import com.mrivanplays.annotationconfig.core.resolver.ConfigResolver;
import java.io.StringWriter;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class TestProperties {

  private final ConfigResolver resolver = PropertyConfig.getConfigResolver();

  @Test
  public void testLoad() {
    PropertiesTestSubject config = new PropertiesTestSubject();
    resolver.load(config, getClass().getClassLoader().getResourceAsStream("test-prop.properties"));
    Assertions.assertEquals(MessageType.COMPONENT, config.getMessageType());
    Assertions.assertEquals("foo bar baz", config.getMessage());
  }

  @Test
  public void testDump() {
    PropertiesTestSubject config = new PropertiesTestSubject();
    StringWriter writer = new StringWriter();
    resolver.dump(config, writer);

    String expected =
        "# Test subject config. Can change at any time\n"
            + "# Generated by AnnotationConfig\n"
            + "\n"
            + "# The message sending strategy with which the message will be sent\n"
            + "message.type=string\n"
            + "\n"
            + "# The message that will be sent to the player\n"
            + "# Bla bla 2nd comment\n"
            + "message=this is a message\n";

    Assertions.assertEquals(expected, writer.toString());
  }
}
